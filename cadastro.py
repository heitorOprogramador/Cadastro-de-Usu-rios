# -*- coding: utf-8 -*-
"""Cadastro.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nRXEtKQtwTUR49wA3bYtiZVVvCLs-vNf
"""

import sqlite3

conexao = sqlite3.connect('meubanco.db')
cursor = conexao.cursor()

cursor.execute('''
CREATE TABLE IF NOT EXISTS usuarios (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome TEXT NOT NULL,
    email TEXT NOT NULL UNIQUE
)
''')
conexao.commit()

# Adicionar usuário
def adicionar_usuario(nome, email):
    try:
        cursor.execute("INSERT INTO usuarios (nome, email) VALUES (?, ?)", (nome, email))
        conexao.commit()
        print("Usuário adicionado com sucesso!")
    except sqlite3.IntegrityError:
        print("Erro: Email já cadastrado!")

# Listar usuários
def listar_usuarios():
    cursor.execute("SELECT * FROM usuarios")
    usuarios = cursor.fetchall()
    if usuarios:
        for usuario in usuarios:
            print(usuario)
    else:
        print("Nenhum usuário cadastrado.")

# Atualizar usuário
def atualizar_usuario(id_usuario, novo_nome, novo_email):
    cursor.execute("UPDATE usuarios SET nome = ?, email = ? WHERE id = ?", (novo_nome, novo_email, id_usuario))
    conexao.commit()
    print("Usuário atualizado com sucesso!")

# Deletar usuário
def deletar_usuario(id_usuario):
    cursor.execute("DELETE FROM usuarios WHERE id = ?", (id_usuario,))
    conexao.commit()
    print("Usuário removido com sucesso!")

# Menu usuário
def menu():
    while True:
        print("\nGerenciador de Usuários")
        print("1 - Adicionar Usuário")
        print("2 - Listar Usuários")
        print("3 - Atualizar Usuário")
        print("4 - Deletar Usuário")
        print("5 - Sair")
        opcao = input("Escolha uma opção: ")

        if opcao == "1":
            nome = input("Digite o nome: ")
            email = input("Digite o email: ")
            adicionar_usuario(nome, email)
        elif opcao == "2":
            listar_usuarios()
        elif opcao == "3":
            id_usuario = input("Digite o ID do usuário a ser atualizado: ")
            novo_nome = input("Digite o novo nome: ")
            novo_email = input("Digite o novo email: ")
            atualizar_usuario(id_usuario, novo_nome, novo_email)
        elif opcao == "4":
            id_usuario = input("Digite o ID do usuário a ser deletado: ")
            deletar_usuario(id_usuario)
        elif opcao == "5":
            print("Saindo...")
            break
        else:
            print("Opção inválida! Tente novamente.")

if __name__ == "__main__":
    menu()

conexao.close()